{"meta":{"title":"chendi's wiki","subtitle":null,"description":null,"author":"chendi","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2018-07-16T12:16:36.495Z","updated":"2018-07-16T10:51:01.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-07-16T12:16:36.697Z","updated":"2018-07-16T10:51:01.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-07-16T12:16:36.406Z","updated":"2018-07-16T10:51:01.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"D4.子目录功能","slug":"D4.How-to-install-wiki-with-hexo-and-github-pages","date":"2018-08-03T14:07:26.773Z","updated":"2018-08-03T14:08:44.887Z","comments":true,"path":"2018/08/03/D4.How-to-install-wiki-with-hexo-and-github-pages/","link":"","permalink":"http://yoursite.com/2018/08/03/D4.How-to-install-wiki-with-hexo-and-github-pages/","excerpt":"","text":"1.","categories":[{"name":"D.基于github pages搭建博客和wiki","slug":"D-基于github-pages搭建博客和wiki","permalink":"http://yoursite.com/categories/D-基于github-pages搭建博客和wiki/"}],"tags":[]},{"title":"D3.使用Hexo插件插入音乐/视频","slug":"D3.How-to-install-wiki-with-hexo-and-github-pages","date":"2018-08-03T12:33:59.667Z","updated":"2018-08-03T14:02:00.220Z","comments":true,"path":"2018/08/03/D3.How-to-install-wiki-with-hexo-and-github-pages/","link":"","permalink":"http://yoursite.com/2018/08/03/D3.How-to-install-wiki-with-hexo-and-github-pages/","excerpt":"","text":"1.","categories":[{"name":"D.基于github pages搭建博客和wiki","slug":"D-基于github-pages搭建博客和wiki","permalink":"http://yoursite.com/categories/D-基于github-pages搭建博客和wiki/"}],"tags":[]},{"title":"D2.github pages+hexo搭建个人博客","slug":"D2.How-to-install-wiki-with-hexo-and-github-pages","date":"2018-07-17T01:08:00.883Z","updated":"2018-08-03T14:01:57.755Z","comments":true,"path":"2018/07/17/D2.How-to-install-wiki-with-hexo-and-github-pages/","link":"","permalink":"http://yoursite.com/2018/07/17/D2.How-to-install-wiki-with-hexo-and-github-pages/","excerpt":"","text":"1.创建仓库，并开启pages https://chendi20082009.github.io/mywiki/ 说明： 每个GitHub帐号下只能有1个个人主页repo，但是可以有不限数量的项目主页repo。 没有自定义域名的情况下，项目主页的访问链接只能是&lt;username&gt;.github.io/&lt;projectname&gt;而不是&lt;projectname&gt;.&lt;username&gt;.github.io 2. 绑定域名 在项目的repo里新建一个CNAME文件，并将不带协议名的裸域名写进去(demo.chitanda.me而不是http://demo.chitanda.me/) 这一步可以参考官方文档 到你域名的DNS服务商里给对应的二级域名添加CNAME解析到&lt;username&gt;.github.io(和个人主页的配置相同) 3. 等待DNS生效 具体时间和服务商有关（十几分钟到几小时都有可能）。 如果不确定自己的解析是否生效了，可以在linux系统下用dig命令来检测.参考官方文档","categories":[{"name":"D.基于github pages搭建博客和wiki","slug":"D-基于github-pages搭建博客和wiki","permalink":"http://yoursite.com/categories/D-基于github-pages搭建博客和wiki/"}],"tags":[]},{"title":"D1.简单介绍及环境安装","slug":"D1.How-to-install-wiki-with-hexo-and-github-pages","date":"2018-07-16T12:22:51.161Z","updated":"2018-08-03T14:01:32.384Z","comments":true,"path":"2018/07/16/D1.How-to-install-wiki-with-hexo-and-github-pages/","link":"","permalink":"http://yoursite.com/2018/07/16/D1.How-to-install-wiki-with-hexo-and-github-pages/","excerpt":"","text":"1. Github pages介绍 GitHub是基于git实现的代码托管，git可能是目前最好用的版本控制系统了，数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行； 博客内容可以轻松打包、转移、发布到其它平台； GitHub可以免费使用，并且快速稳定；GitHub pages全是静态文件，访问速度快； Github Pages可以被认为是用户编写的、托管在github上的静态网页。 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的，但暂时貌似只能绑定一个。 简单快捷，使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦 免费方便而且没有空间流量限制的，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；而wordpress则需要额外支付昂贵的主机费 2. 基本环境2.1有一个github账号 打开https://github.com/站点，注册一个账号 创建仓储 绑定域名 2.2安装了node.js、npm，并了解相关基础知识在 Windows 环境下安装 Node.js 非常简单，仅须到官网下载安装文件并执行即可完成安装。 先简单介绍下 npm，引用阮一峰老师的文章：npm 是 Node 的模块管理器，功能极其强大。它是 Node 获得成功的重要原因之一。正因为有了npm，我们只要一行命令，就能安装别人写好的模块 。npm install 命令用来安装模块到node_modules目录。NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：允许用户从NPM服务器下载别人编写的第三方包到本地使用。允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。由于新版的 nodejs 已经集成了 npm，所以之前 npm 也一并安装好了。同样可以通过输入 “npm -v” 来测试是否成功安装。 2.3安装了git for windows（或者其它git客户端）下载安装git。下载地址https://git-scm.com/downloads 2.4 配置SSH key为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 1ssh-keygen -t rsa -C &quot;chendi2082009@qq.com&quot; 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 将刚复制的内容粘贴到key那里，title随便填，保存。 测试是否成功 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到： Hi chendi20082009! You’ve successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！ 此时你还需要配置：因为github每次commit都会记录他们。 12$ git config --global user.name &quot;chendi20082009&quot;// 你的github用户名，非昵称$ git config --global user.email &quot;chendi20082009@qq.com&quot;// 填写你的github注册邮箱 3. 安装hexo hexo 本身是一个静态博客生成工具，具备编译 Markdown、拼接主题模板、生成 HTML、上传 Git 或 FTP 等基本功能。将这些功能封装为命令，提供给用户通过 hexo server / hexo deploy 等命令调用的模块，就是 hexo-cli 了。CLI = Command Line Interface 命令行界面。 后者是前者的命令行模式 3.1 初始化1npm install -g hexo 在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是D:\\Dropbox\\hexo，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。 12$ cd /d/dropbox/hexo/$ hexo init hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图： 12hexo g # 生成hexo s # 启动服务 hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000/ 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突换用其它端口： 1hexo s -p 5000 第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子： 3.2 修改主题下载主题至主题目录，如：maupassant-hexo 安装主题和渲染器： 编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。 详细的配置过程参照这里 https://www.haomwei.com/technology/maupassant-hexo.html 4.上传至github在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。 如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。 首先，ssh key肯定要配置好。 其次，配置_config.yml中有关deploy的部分： 正确写法： 此时直接执行hexo d的话一般会报如下错误： 1Deployer not found: github 或者 Deployer not found: git 1原因是还需要安装一个插件： 其它命令不确定，部署这个命令一定要用git bash，否则会提示Permission denied (publickey). 打开你的git bash，输入hexo d就会将本次有改动的代码全部提交，没有改动的不会： # Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:type: gitrepo: https://github.com/chendi20082009/hexo.gitbranch: master 5.一些问题解决hexo博客的乱码问题 方法： ​ 1.将博客文件保存为UTF-8 ​ 用记事本打开本地的博客文件“xxx.md”，然后点“另存为”，“编码(E):”选择“UTF-8”， 点击“保存”，替换原文件。 ​ 2.重新生成，部署，博客乱码即消除。 6.常用命令12345$ hexo g #完整命令为hexo generate，用于生成静态文件$ hexo s #完整命令为hexo server，用于启动服务器，主要用来本地预览$ hexo d #完整命令为hexo deploy，用于将本地文件发布到github上$ hexo n #完整命令为hexo new，用于新建一篇文章$ hexo clean #清楚缓存","categories":[{"name":"D.基于github pages搭建博客和wiki","slug":"D-基于github-pages搭建博客和wiki","permalink":"http://yoursite.com/categories/D-基于github-pages搭建博客和wiki/"}],"tags":[]},{"title":"C1.我在电脑上使用的软件","slug":"C1.my-soft-list","date":"2018-07-15T16:00:00.000Z","updated":"2018-08-03T13:14:17.167Z","comments":true,"path":"2018/07/16/C1.my-soft-list/","link":"","permalink":"http://yoursite.com/2018/07/16/C1.my-soft-list/","excerpt":"","text":"电脑上的软件： 下载工具：Internet Download Manager（替代品为Eagleget） 办公软件：CAJViewer、Foxmail、Microsoft Office、OneKeyTools、慧办公、方方格子、FoxitReader、Adobe Acrobat DC 专业工具：Endnote、Mindjet MindManager、Origin、Sigma-P、ChemBioOffice 笔记软件：有道云笔记，有道云协作 压缩刻录：Bandizip（替代品为360压缩） 图形图像：IrfanView、美图秀秀、Photoshop 安全杀毒：360杀毒、360安全卫士 浏览器：Chrome 文件存储备份工具：GoodSync（替代品为FileGee），onedrive、Dropbox、百度网盘 搜索工具：Everything、Listary 即时通讯工具：阿里旺旺、TIM、微信电脑版 视频工具：Potplayer（替代品为KMplayerPlus和QQ影音）、屏幕录像专家、Core VideoStudio、迅捷视频转换器 输入法：搜狗输入法 翻译工具：有道词典 远程工具：TeamViewer 网站工具：Git、Putty、WinScp、FlashFXP、Dreamviewer、VS code 服务组件：Node.js、Python、JAVA 其它：屏幕按键精灵、 流程图工具：Microsoft Visio","categories":[{"name":"C.软件","slug":"C-软件","permalink":"http://yoursite.com/categories/C-软件/"}],"tags":[]},{"title":"A1.Hello World","slug":"A1.hello-world","date":"2018-07-15T16:00:00.000Z","updated":"2018-08-03T13:54:59.707Z","comments":true,"path":"2018/07/16/A1.hello-world/","link":"","permalink":"http://yoursite.com/2018/07/16/A1.hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"A.hexo","slug":"A-hexo","permalink":"http://yoursite.com/categories/A-hexo/"}],"tags":[]},{"title":"B-B1. 我的wiki工具","slug":"B-B1.my-personal-wiki-tool","date":"2018-07-15T16:00:00.000Z","updated":"2018-08-03T14:05:23.182Z","comments":true,"path":"2018/07/16/B-B1.my-personal-wiki-tool/","link":"","permalink":"http://yoursite.com/2018/07/16/B-B1.my-personal-wiki-tool/","excerpt":"","text":"为什么要写wiki？以及用什么工具去写？ 以下内容引用自zthxxx 的个人wiki站点的话语，感觉写的很赞，特此摘录下来： 我一直觉得 知识不能碎片化，要结构化，于是希望寻找一种优雅的方式来管理我的知识。 先后了解或尝试过 OneNote、Evernote、Blog、Wiki 等方式，总结了一套觉得比较合理的知识获取吸收管理流程： 通过网页、RSS、微信等网络渠道作为知识获取来源。 通过笔记系统（手写笔记、OneNote、Evernote）初步筛选有价值有针对性的信息，收藏信息，分类整理，做读后要点笔记记录。 自己平时突然想到或总结的一两句话，或很零碎的点子、灵感，初步消化的内容，则用 Wiki 记录。 最后当 Wiki 在某版块有一定量后，将这方面笔记和 Wiki 中的内容重读，整理和提炼，二次消化精炼再加上自己的感悟和理解，写成文章发表在 博客 上。 在使用中，笔记系统 主大块信息的分类和整理，Wiki 主零碎知识的积累，而 博客 只在于 精。 Wiki 中某一版块刚建时，可能只有很少内容或者就一句话，但是通过这种使用流程，日积月累，这方面的事物接触得多了，零散的知识也就多了，那么 Wiki 中这个版块记录的内容也就会变多了，也就是通过积累，把原本大量碎片化的知识结构化整理起来了。 博客的目的是 分享和展示，分享自己的知识，展示自己的水平，需要放拿得出手的东西，因此不适合放碎片化的只言片语，更适合放 一个系列 的总结或者教程等，是一个十分成体系的知识平台。 当我尝试部署一个自己的 Wiki 系统时，又开始纠结于选择哪个 Wiki 系统。参考网上博客，实际部署和对比比较了几个时下流行的 Wiki 系统：MediaWiki, DokuWiki, MDwiki, TiddlyWiki, wiz, vimwiki, Simiki, Wikitten 等等。都不如人意，有些是部署麻烦复杂，有些是界面太丑，有些不能分级，有些分级不能展开，有些不能搜索，还有的甚至不是用的 Markdown 。。。 根据这些不算满意的使用体验，我总结整理了一下自己对于 个人 Wiki 的一些需求。 界面简洁美观，排版字体友好 支持多级分类 方便修改和更新内容 部署简单 分类目录可展开和收缩 展开分类时可查看该分类下所有文章 / 词条的标题 每篇文章 / 词条能添加多个分类 / 标签 Wiki 可支持引用内部链接 使用 Markdown 书写文章 / 词条 支持全文搜索（可搜索内容和标题） 在之前的使用中，Wikiteen 是最接近我需求的，但是仍然有一些条件不满足，比如部署和搜索。但是我个人比较喜欢 Wikitten 的样式。 于是最终我选择了仿照 Wikitten 的样式自己写这个基于 Hexo 的 Wiki 主题 hexo-theme-Wikitten，作为自己用的一套 Wiki 系统，基本实现了上述的需求。现在暂时自己用着，当然这个初步功能还很简单，后续也有一堆 Bug 和 TODO List 需要维护，欢迎有兴趣的提提 PR。 我自己也尝试了许多的知识管理工具，主要有： 笔记类软件：有道云笔记、Evernote 企业协作工具：有道云协作、confluence server、confluence cloud 博客类工具：wordpress 在使用的过程中发现各有利弊，现总结自己的使用心得如下： 笔记类软件如有道云笔记与Evernote作为收藏工具是非常方便的，可以从网页、微信、微博等多处的资料收集起来，但使用过程中发现，此类软件 我理想中的个人知识管理工具，应具有以下特点： 可以进行文字、图片、视频等多方位的记录。 资料不要要有私密性，而且还可以方便进行分享。","categories":[{"name":"B.高效学习","slug":"B-高效学习","permalink":"http://yoursite.com/categories/B-高效学习/"},{"name":"B1.知识管理","slug":"B-高效学习/B1-知识管理","permalink":"http://yoursite.com/categories/B-高效学习/B1-知识管理/"}],"tags":[]},{"title":"C2.我在手机上使用的软件","slug":"C2.my-soft-list","date":"2018-07-15T16:00:00.000Z","updated":"2018-08-03T13:15:08.270Z","comments":true,"path":"2018/07/16/C2.my-soft-list/","link":"","permalink":"http://yoursite.com/2018/07/16/C2.my-soft-list/","excerpt":"","text":"手机上的软件： 聊天工具：","categories":[{"name":"C.软件","slug":"C-软件","permalink":"http://yoursite.com/categories/C-软件/"}],"tags":[]}]}